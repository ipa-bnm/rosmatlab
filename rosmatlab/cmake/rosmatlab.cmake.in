# Find the rosmatlab source folder
if(@INSTALLSPACE@)
  set(rosmatlab_SOURCE_DIR "@CMAKE_INSTALL_PREFIX@/@CATKIN_PACKAGE_SHARE_DESTINATION@")
else()
  set(rosmatlab_SOURCE_DIR "@PROJECT_SOURCE_DIR@")
endif()

# Set install destinations for global and package-specific matlab files
set(GLOBAL_MATLAB_DESTINATION matlab)
set(PACKAGE_MATLAB_DESTINATION matlab/+${PROJECT_NAME})

# Find Matlab and load mex macros
list(APPEND CMAKE_MODULE_PATH @rosmatlab_SOURCE_DIR@/cmake)
include(FindMatlab)
include(MatlabMexMacro)

# Find cpp_introspection
find_package(cpp_introspection REQUIRED)
include_directories(${cpp_introspection_INCLUDE_DIRS})

# Set default MEX_OUTPUT_PATH
if (NOT DEFINED MEX_OUTPUT_PATH)
  if(ROSBUILD_init_called)
    set(MEX_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/matlab)
  elseif(catkin_FOUND)
    set(MEX_OUTPUT_PATH ${CATKIN_DEVEL_PREFIX}/matlab)
  endif()
endif()

# Define add_mex macro
include(CMakeParseArguments)
function(add_mex lib)
  
  cmake_parse_arguments(${lib} "" "OUTPUT_NAME;PACKAGE;DESTINATION;RENAME" "SOURCES" ${ARGN})
  set(${lib}_SOURCES ${${lib}_SOURCES} ${${lib}_UNPARSED_ARGUMENTS})

  ADD_MEX_FILE(${lib} ${${lib}_SOURCES})

	# Prevent deletion of existing lib of same name
	set_target_properties(${lib} PROPERTIES CLEAN_DIRECT_OUTPUT 1)

	if(ROSBUILD_init_called)
		# Attach compile and link flags
		rosbuild_add_compile_flags(${lib} ${${PROJECT_NAME}_CFLAGS_OTHER})
		rosbuild_add_link_flags(${lib} ${${PROJECT_NAME}_LDFLAGS_OTHER})
		# Link lib against dependent libs
		target_link_libraries(${lib} ${${PROJECT_NAME}_LIBRARIES})

		# Add ROS-wide compile and link flags (usually things like -Wall).  These
		# are set in rosconfig.cmake.
		rosbuild_add_compile_flags(${lib} ${ROS_COMPILE_FLAGS})
		rosbuild_add_link_flags(${lib} ${ROS_LINK_FLAGS})

		# Make sure to do any prebuild work (e.g., msg/srv generation) before
		# building this target.
		add_dependencies(${lib} rosbuild_precompile)
	endif()

  if(DEFINED ${lib}_OUTPUT_NAME)
    set_target_properties(${lib} PROPERTIES OUTPUT_NAME "${${lib}_OUTPUT_NAME}")
  endif()

  if(DEFINED ${lib}_PACKAGE)
    set(${lib}_DESTINATION "+${${lib}_PACKAGE}/${${lib}_DESTINATION}")
  endif()
  
  if (DEFINED ${lib}_RENAME)
    message("Current executable dir: ${CMAKE_SOURCE_DIR}")
    configure_file("${CMAKE_CURRENT_SOURCE_DIR}/post_install_rename.cmake.in" "${CATKIN_DEVEL_PREFIX}/etc/post_install_${lib}_rename.cmake")
    set_target_properties(${lib} PROPERTIES POST_INSTALL_SCRIPT "${CATKIN_DEVEL_PREFIX}/etc/post_install_${lib}_rename.cmake")
  endif()

  #Set output path
  if(MEX_OUTPUT_PATH)
    set_target_properties(${lib} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${MEX_OUTPUT_PATH}/${${lib}_DESTINATION}")
  else()
    set_target_properties(${lib} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${${lib}_DESTINATION}")
  endif()
  
  # Install
  install(TARGETS ${lib} DESTINATION ${GLOBAL_MATLAB_DESTINATION}/${${lib}_DESTINATION})
  
endfunction()

# Define add_mex_messages macro
function(add_mex_messages package)
  if(NOT TARGET mex_${package})
    message(STATUS "Building MEX message library for package ${package}")
    add_subdirectory("${rosmatlab_SOURCE_DIR}/src/messages" "${CMAKE_CURRENT_BINARY_DIR}/messages/${package}")
  endif()
endfunction()

function(rosmatlab_install)
  file(COPY matlab/ DESTINATION ${CATKIN_DEVEL_PREFIX}/${GLOBAL_MATLAB_DESTINATION})
  install(DIRECTORY matlab/ DESTINATION ${GLOBAL_MATLAB_DESTINATION})
endfunction()
